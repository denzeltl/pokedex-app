{"version":3,"sources":["components/Header.js","contexts/PokemonContext.js","components/SearchList.js","components/Searchbar.js","components/PokemonCard.js","components/App.js","index.js"],"names":["Header","className","PokemonContext","createContext","PokemonContextProvider","children","useState","pokemonList","setPokemonList","searchList","setSearchList","pokemonApi","setPokemonApi","pokemonData","setPokemonData","hasData","setHasData","isLoading","setIsLoading","noPokemon","setNoPokemon","showSearchList","setShowSearchList","useEffect","a","axios","get","result","data","results","fetchData","then","catch","error","Provider","value","getData","query","SearchList","setValue","useContext","handleClick","e","target","textContent","split","map","word","toLowerCase","join","pokemon","onClick","key","name","charAt","toUpperCase","slice","Searchbar","length","queryList","filter","includes","onSubmit","preventDefault","type","placeholder","onChange","PokemonCard","id","image","sprites","front_default","types","Object","keys","firstType","slot","height","toFixed","weight","abilities","stats","src","alt","width","ability","base_stat","style","App","color","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.28156d7f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"header\">\r\n            <h1>Pokedex App</h1>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const PokemonContext = createContext();\r\n\r\nconst PokemonContextProvider = ({ children }) => {\r\n    const [pokemonList, setPokemonList] = useState([]);\r\n    const [searchList, setSearchList] = useState([]);\r\n    const [pokemonApi, setPokemonApi] = useState('');\r\n    const [pokemonData, setPokemonData] = useState({});\r\n    const [hasData, setHasData] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [noPokemon, setNoPokemon] = useState(false);\r\n    const [showSearchList, setShowSearchList] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const result = await axios.get('https://pokeapi.co/api/v2/pokemon?limit=964');\r\n            setPokemonList(result.data.results);\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            await axios\r\n                .get(`https://pokeapi.co/api/v2/pokemon/${pokemonApi}`)\r\n                .then((result) => {\r\n                    setPokemonData(result.data);\r\n                    setIsLoading(false);\r\n                })\r\n                .catch((error) => {\r\n                    setHasData(false);\r\n                    setNoPokemon(true);\r\n                    setIsLoading(false);\r\n                });\r\n        };\r\n\r\n        fetchData();\r\n    }, [pokemonApi]);\r\n\r\n    const getData = (query) => {\r\n        setPokemonApi(query);\r\n        setNoPokemon(false);\r\n        setHasData(true);\r\n        setIsLoading(true);\r\n        setShowSearchList(false);\r\n    };\r\n\r\n    return (\r\n        <PokemonContext.Provider value={{ pokemonApi, pokemonData, getData, hasData, isLoading, pokemonList, noPokemon, setSearchList, searchList, showSearchList, setShowSearchList }}>\r\n            {children}\r\n        </PokemonContext.Provider>\r\n    );\r\n};\r\n\r\nexport default PokemonContextProvider;\r\n","import React, { useContext } from 'react';\r\nimport { PokemonContext } from '../contexts/PokemonContext';\r\n\r\nconst SearchList = ({ setValue }) => {\r\n    const { searchList, showSearchList, getData } = useContext(PokemonContext);\r\n\r\n    const handleClick = (e) => {\r\n        getData(\r\n            e.target.textContent\r\n                .split(' ')\r\n                .map((word) => word.toLowerCase())\r\n                .join('-')\r\n        );\r\n        setValue('');\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {showSearchList && (\r\n                <ul className=\"search-list\">\r\n                    {searchList.map((pokemon) => (\r\n                        <li onClick={handleClick} key={pokemon.name}>\r\n                            {pokemon.name\r\n                                .split('-')\r\n                                .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\r\n                                .join(' ')}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SearchList;\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport { PokemonContext } from '../contexts/PokemonContext';\r\nimport SearchList from './SearchList';\r\n\r\nconst Searchbar = () => {\r\n    const [value, setValue] = useState('');\r\n    const { getData, pokemonList, setShowSearchList, setSearchList } = useContext(PokemonContext);\r\n\r\n    useEffect(() => {\r\n        if (value.length <= 2) {\r\n            setShowSearchList(false);\r\n            return;\r\n        } else {\r\n            const queryList = pokemonList.filter((pokemon) => pokemon.name.includes(value));\r\n            setSearchList(queryList);\r\n            if (queryList.length) {\r\n                setShowSearchList(true);\r\n            }\r\n        }\r\n    }, [value]);\r\n\r\n    const handleChange = (e) => {\r\n        setValue(\r\n            e.target.value\r\n                .split(' ')\r\n                .map((word) => word.toLowerCase())\r\n                .join('-')\r\n        );\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (value.length >= 3) {\r\n            getData(value);\r\n            setValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form className=\"searchbar\" onSubmit={handleSubmit}>\r\n            <input type=\"text\" placeholder=\"Enter a pokemon...\" value={value} onChange={handleChange} />\r\n            <SearchList setValue={setValue} />\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Searchbar;\r\n","import React, { useContext } from 'react';\r\nimport { PokemonContext } from '../contexts/PokemonContext';\r\n\r\nconst PokemonCard = () => {\r\n    const { pokemonData, hasData } = useContext(PokemonContext);\r\n\r\n    const name =\r\n        pokemonData.name &&\r\n        pokemonData.name\r\n            .split('-')\r\n            .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\r\n            .join(' ');\r\n    const id = pokemonData.id < 10 ? `00${pokemonData.id}` : pokemonData.id < 100 ? `0${pokemonData.id}` : pokemonData.id;\r\n    const image = { ...pokemonData.sprites }.front_default;\r\n    const types = Object.keys({ ...pokemonData.types }).map((key) => pokemonData.types[key]);\r\n    const firstType = types.filter((type) => type.slot === 1).map((type) => type.type.name);\r\n    const height = (pokemonData.height * 0.1).toFixed(2);\r\n    const weight = (pokemonData.weight * 0.1).toFixed(2);\r\n    const abilities = Object.keys({ ...pokemonData.abilities }).map((key) => pokemonData.abilities[key]);\r\n    const stats = Object.keys({ ...pokemonData.stats }).map((key) => pokemonData.stats[key]);\r\n\r\n    return (\r\n        <section>\r\n            {hasData && (\r\n                <div className={`pokemon-card ${firstType[0]}`}>\r\n                    <div className=\"container container--name\">\r\n                        <div className=\"name\">\r\n                            <h2>\r\n                                {name} <span>#{id}</span>\r\n                            </h2>\r\n                        </div>\r\n                        <div className=\"image\">\r\n                            <img src={image} alt={name} width=\"160\" height=\"160\" />\r\n                        </div>\r\n                        <ul className=\"type\">\r\n                            {types.map((type) => (\r\n                                <li key={type.type.name} className={type.type.name}>\r\n                                    {type.type.name.charAt(0).toUpperCase() + type.type.name.slice(1)}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div className=\"container container--details\">\r\n                        <div className=\"details\">\r\n                            <h3>Details</h3>\r\n                            <div className=\"height\">\r\n                                <h4>Height:</h4>\r\n                                <p>{height} m</p>\r\n                            </div>\r\n                            <div className=\"weight\">\r\n                                <h4>Weight:</h4>\r\n                                <p>{weight} kg</p>\r\n                            </div>\r\n                            <div className=\"abilities\">\r\n                                <h4>Abilities:</h4>\r\n                                <ul>\r\n                                    {abilities.map((ability) => (\r\n                                        <li key={ability.ability.name}>{ability.ability.name.charAt(0).toUpperCase() + ability.ability.name.slice(1)}</li>\r\n                                    ))}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"container container--stats has-no-mb\">\r\n                        <div className=\"stats\">\r\n                            <h3>Base Stats</h3>\r\n                            <ul>\r\n                                <li>\r\n                                    <div className=\"info\">\r\n                                        <h4>HP:</h4>\r\n                                        <p>{{ ...stats[0] }.base_stat}</p>\r\n                                    </div>\r\n                                    <div className=\"bar\">\r\n                                        <div className=\"bar-bg hp\" style={{ width: ({ ...stats[0] }.base_stat / 255) * 100 + '%' }}></div>\r\n                                    </div>\r\n                                </li>\r\n                                <li>\r\n                                    <div className=\"info\">\r\n                                        <h4>Attack:</h4>\r\n                                        <p>{{ ...stats[1] }.base_stat}</p>\r\n                                    </div>\r\n                                    <div className=\"bar\">\r\n                                        <div className=\"bar-bg atk\" style={{ width: ({ ...stats[1] }.base_stat / 255) * 100 + '%' }}></div>\r\n                                    </div>\r\n                                </li>\r\n                                <li>\r\n                                    <div className=\"info\">\r\n                                        <h4>Defense:</h4>\r\n                                        <p>{{ ...stats[2] }.base_stat}</p>\r\n                                    </div>\r\n                                    <div className=\"bar\">\r\n                                        <div className=\"bar-bg def\" style={{ width: ({ ...stats[2] }.base_stat / 255) * 100 + '%' }}></div>\r\n                                    </div>\r\n                                </li>\r\n                                <li>\r\n                                    <div className=\"info\">\r\n                                        <h4>Sp. Atk:</h4>\r\n                                        <p>{{ ...stats[3] }.base_stat}</p>\r\n                                    </div>\r\n                                    <div className=\"bar\">\r\n                                        <div className=\"bar-bg sp-atk\" style={{ width: ({ ...stats[3] }.base_stat / 255) * 100 + '%' }}></div>\r\n                                    </div>\r\n                                </li>\r\n                                <li>\r\n                                    <div className=\"info\">\r\n                                        <h4>Sp. Def:</h4>\r\n                                        <p>{{ ...stats[4] }.base_stat}</p>\r\n                                    </div>\r\n                                    <div className=\"bar\">\r\n                                        <div className=\"bar-bg sp-def\" style={{ width: ({ ...stats[4] }.base_stat / 255) * 100 + '%' }}></div>\r\n                                    </div>\r\n                                </li>\r\n                                <li>\r\n                                    <div className=\"info\">\r\n                                        <h4>Speed:</h4>\r\n                                        <p>{{ ...stats[5] }.base_stat}</p>\r\n                                    </div>\r\n                                    <div className=\"bar\">\r\n                                        <div className=\"bar-bg spd\" style={{ width: ({ ...stats[5] }.base_stat / 255) * 100 + '%' }}></div>\r\n                                    </div>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default PokemonCard;\r\n","import React, { useContext } from 'react';\r\nimport Header from './Header';\r\nimport Searchbar from './Searchbar';\r\nimport PokemonCard from './PokemonCard';\r\nimport Loader from 'react-loader-spinner';\r\nimport { PokemonContext } from '../contexts/PokemonContext';\r\n\r\nfunction App() {\r\n    const { isLoading, noPokemon } = useContext(PokemonContext);\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <Header />\r\n            <Searchbar />\r\n            {isLoading ? <Loader className=\"loader\" type=\"ThreeDots\" color=\"#999\" /> : <PokemonCard />}\r\n            {noPokemon && <h2 className=\"no-pokemon\">Sorry, no pokemon found.</h2>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './components/App';\r\nimport PokemonContextProvider from './contexts/PokemonContext';\r\n\r\nReactDOM.render(\r\n    <PokemonContextProvider>\r\n        <App />\r\n    </PokemonContextProvider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}